openapi: 3.0.0
info:
  title: Mitarbeiter API
  description: Eine API für die Verwaltung von Mitarbeitern
  version: 1.0.0
paths:
  /mitarbeiter:
    get:
      parameters:
        - in: query
          name: geschaeftspartnerId
          schema:
            type: integer
            format: int64
          required: false
          description: Geschaeftspartner ID, wenn spezifiziert, werden nur Mitarbeiter zurückgegeben, die diesem Geschaeftspartner zugeordnet sind.
        - in: query
          name: standortId
          schema:
            type: array
            items:
              type: integer
              format: int64
          required: false
          description: Standort IDs, wenn spezifiziert, werden nur Mitarbeiter zurückgegeben, die an einem der angegebenen Standorte arbeiten.
      operationId: getAllMitarbeiter
      summary: getMitarbeiterBy
      description: Ausgabe der Mitarbeiter, deren Eigenschaften mit den übergebenen Parametern übereinstimmt.
      responses:
        '200':
          description: ermittelt alle Mitarbeiter
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MitarbeiterModel'
    post:
      operationId: addMitarbeiter
      summary: add Mitarbeiter
      description: erstellt einen neuen Mitarbeiter hinzu
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MitarbeiterModel'
      responses:
        '201':
          description: erfolgreich hinzugefügt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MitarbeiterModel'
  /mitarbeiter/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID des Mitarbeiters
        schema:
          type: integer
          format: int64
    get:
      operationId: getMitarbeiterById
      summary: getMitarbeiterById
      description: ermittelt einen Mitarbeiter anhand dessen ID
      responses:
        '200':
          description: erfolgreich
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MitarbeiterModel'
        '404':
          description: Mitarbeiter nicht gefunden
          content:
            text/plain:
              schema:
                type: string
    put:
      operationId: update a Mitarbeiter anhand dessen Id
      summary: UpdateMitarbeiter
      description: aktualisiert einen Mitarbeiter anhand dessen ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MitarbeiterModel'
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MitarbeiterModel'
        '404':
          description: Mitarbeiter nicht gefunden
          content:
            text/plain:
              schema:
                type: string
    delete:
      summary: deleteMitarbeiter
      description: löscht einen Mitarbeiter anhand dessen ID
      responses:
        '204':
          description: Successfully deleted
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Mitarbeiter nicht gefunden
          content:
            text/plain:
              schema:
                type: string
  /mitarbeiter/{id}/wechsel-standort:
    put:
      operationId: wechsleMitarbeiterStandorte
      summary: UpdateMitarbeiterStandorte
      description: wechselt den Standort der Mitarbeiter zu einem oder mehreren
      parameters:
        - name: id
          in: path
          required: true
          description: ID des Mitarbeiters
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZielStandorte'
      responses:
        200:
          description: Der Mitarbeiter wurde erfolgreich den neuen Standorten zugeordnet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MitarbeiterModel"
        404:
          description: Der Mitarbeiter oder mindestens einer der neuen Standorte konnte nicht gefunden werden
          content:
            text/plain:
              schema:
                type: string
  /mitarbeiter/{id}/wechsel-geschaeftspartner/{geschaeftspartnerId}:
    put:
      operationId: wechsleGeschaeftspartner
      summary: UpdateMitarbeiterGeschaeftspartner
      description: wechselt den Standort des Mitarbeiters zu einem oder mehreren neuen Standorten (5)
      parameters:
        - name: id
          in: path
          required: true
          description: ID des Mitarbeiters
          schema:
            type: integer
            format: int64
        - name: geschaeftspartnerId
          in: path
          required: true
          description: ID des Geschaeftspartners
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Der Mitarbeiter wurde erfolgreich den neuen Standorten zugeordnet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MitarbeiterModel"
        404:
          description: der Mitarbeiter oder die geschaeftspartner konnte nicht gefunden werden
components:
  schemas:
    ZielStandorte:
      type: object
      properties:
        standorteIds:
          type: array
          items:
            type: integer
            format: int64
        removeOld:
          type: boolean
          default: true
      required:
        - standorteId
    AnschriftModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID der Anschrift
        strasse:
          type: string
          description: Straßenname der Anschrift
        hausnummer:
          type: string
          description: Hausnummer der Anschrift
        plz:
          type: string
          description: Postleitzahl der Anschrift
        ort:
          type: string
          description: Ortsname der Anschrift
        land:
          type: string
          description: Land der Anschrift
        zusatz:
          type: string
          description: Zusatzinformationen zur Anschrift
      required:
        - strasse
        - hausnummer
        - plz
        - ort
        - land
      example:
        id: 1
        strasse: Musterstraße
        hausnummer: 42
        plz: 12345
        ort: Musterstadt
        land: Deutschland
    MitarbeiterModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        vorname:
          type: string
          minLength: 1
          maxLength: 255
        nachname:
          type: string
          minLength: 1
          maxLength: 255
        telefonnummer:
          type: string
          pattern: "^(\\+49|0)[1-9]\\d{1,4}[\\s/\\-]?\\d{1,12}$"
        email:
          type: string
          format: email
        geburtsdatum:
          type: string
          format: date
        geschaeftspartnerId:
          type: integer
          format: int64
        standortIds:
          type: array
          items:
            type: integer
            format: int64
        anschriftModel:
          $ref: '#/components/schemas/AnschriftModel'



